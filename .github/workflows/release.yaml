name: Release

on:
  release:
    branches:
      - main

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: rakhmadbudiono/duck-pic-service:latest,rakhmadbudiono/duck-pic-service:${{ env.RELEASE_VERSION }}
          build-args: RELEASE_VERSION=${{ env.RELEASE_VERSION }}

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -input=false -reconfigure -backend-config "bucket=${{ secrets.TF_BACKEND_BUCKET }}" -backend-config "endpoint=${{ secrets.TF_BACKEND_ENDPOINT }}" -backend-config "key=${{ secrets.TF_BACKEND_KEY }}" -backend-config "region=us-east-1" -backend-config "access_key=${{ secrets.TF_BACKEND_ACCESS_KEY }}" -backend-config "secret_key=${{ secrets.TF_BACKEND_SECRET_KEY }}" -backend-config "skip_credentials_validation=true" -backend-config "skip_metadata_api_check=true"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -var "digitalocean_token=${{ secrets.DO_TOKEN }}" -var "cluster_name=${{ secrets.KUBE_CLUSTER }}" -var "cluster_version=${{ secrets.KUBE_CLUSTER_VERSION }}" -var "node_pool_name=${{ secrets.KUBE_CLUSTER_NODE_POOL_NAME }}" -var "node_pool_size=${{ secrets.KUBE_CLUSTER_NODE_POOL_SIZE }}" -var "node_pool_node_count=${{ secrets.KUBE_CLUSTER_NODE_POOL_NODE_COUNT }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "digitalocean_token=${{ secrets.DO_TOKEN }}" -var "cluster_name=${{ secrets.KUBE_CLUSTER }}" -var "cluster_version=${{ secrets.KUBE_CLUSTER_VERSION }}" -var "node_pool_name=${{ secrets.KUBE_CLUSTER_NODE_POOL_NAME }}" -var "node_pool_size=${{ secrets.KUBE_CLUSTER_NODE_POOL_SIZE }}" -var "node_pool_node_count=${{ secrets.KUBE_CLUSTER_NODE_POOL_NODE_COUNT }}"

  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    needs: terraform
    env:
      DO_SPACE_KEY: ${{ secrets.DO_SPACE_KEY }}
      DO_SPACE_SECRET: ${{ secrets.DO_SPACE_SECRET }}
      DO_SPACE_HOST: ${{ secrets.DO_SPACE_HOST }}
      DO_SPACE_BUCKET: ${{ secrets.DO_SPACE_BUCKET }}
      DUCK_SPACE_FOLDER: ${{ secrets.DUCK_SPACE_FOLDER }}
      DUCK_COUNT_DUCK: ${{ secrets.DUCK_COUNT_DUCK }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.KUBE_CLUSTER }}

      - name: Apply secret
        run: cat $GITHUB_WORKSPACE/manifests/secret.yaml | envsubst | kubectl apply -f-

      - name: Apply deployment
        run: kubectl apply -f $GITHUB_WORKSPACE/manifests/deployment.yaml

      - name: Apply service
        run: kubectl apply -f $GITHUB_WORKSPACE/manifests/service.yaml

      - name: Redeploying
        run: kubectl rollout restart deployment/duck-pic-app
